@model Petopia.DAL.Pet

@{
    ViewBag.Title = "Add a Pet!";
}
<!--============================= WHOLE DAMNED FORM HERE =============================-->
<div class="container-fluid">

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form">

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <h2>@ViewBag.Title</h2>
        <hr />

        <!--============================ FIRST\LEFT COLUMN ===========================-->
        <div class="row">
            <div class="col-sm-4 col-md-4">

                <!----------------------------- PET NAME ------------------------------->
                <div class="form-group">
                    @Html.LabelFor(model => model.PetName, htmlAttributes:
                                                        new { @class = "control-label" })

                    @Html.EditorFor(model => model.PetName,
                                new { htmlAttributes = new { @class = "form-control" } })

                    @Html.ValidationMessageFor(model => model.PetName, "",
                                                        new { @class = "text-danger" })
                </div>
                <!----------------------------- PET SPECIES ---------------------------->
                <div class="form-group">
                    @Html.LabelFor(model => model.Species, htmlAttributes:
                                                        new { @class = "control-label" })

                    @Html.EditorFor(model => model.Species,
                                new { htmlAttributes = new { @class = "form-control" } })

                    @Html.ValidationMessageFor(model => model.Species, "",
                                                        new { @class = "text-danger" })
                </div>
                <!-------------------------- MORE STUFF LATER -------------------------->
                @*
                <div class="form-group">
                    @Html.LabelFor(model => model.Breed, htmlAttributes: new { @class = "control-label" })

                        @Html.EditorFor(model => model.Breed, new { htmlAttributes = new { @class = "form-control" } })

                        @Html.ValidationMessageFor(model => model.Breed, "", new { @class = "text-danger" })
                </div>
                *@
                <!------------------------------ PET GENDER ---------------------------->
                <div class="form-group">
                    @Html.LabelFor(model => model.Gender, htmlAttributes:
                                                    new { @class = "control-label" })

                    @Html.EditorFor(model => model.Gender,
                                new { htmlAttributes = new { @class = "form-control" } })

                    @Html.ValidationMessageFor(model => model.Gender, "",
                                                        new { @class = "text-danger" })
                </div>
                <!---------------------------------------------------------------------->
            </div><!-- END 1st\LEFT FOUR-COLUMN DIV -->
            <!---->
            <!---->
            <!--=========================== SECOND\MIDDLE COLUMN =====================-->
            <div class="col-sm-4 col-md-4">

            </div><!-- END 2nd\MIDDLE FOUR-COLUMN DIV -->
            <!---->
            <!---->
            <!--============================ THIRD\RIGHT COLUMN ======================-->
            <div class="col-sm-4 col-md-4">

            </div><!-- END 3rd\RIGHT FOUR-COLUMN DIV -->
        </div><!-- END 1st ROW!-->
        <!---->
        <!---->
        <!--==========================================================================-->
        @*
        <div class="form-group">
            @Html.LabelFor(model => model.Altered, 
                                    htmlAttributes: new { @class = "control-label" })

            @Html.EditorFor(model => model.Altered, 
                        new { htmlAttributes = new { @class = "form-control" } })

            @Html.ValidationMessageFor(model => model.Altered, "", 
                                    new { @class = "text-danger" })
        </div>



        <div class="form-group">
            @Html.LabelFor(model => model.Birthdate, 
                                    htmlAttributes: new { @class = "control-label" })

            @Html.EditorFor(model => model.Birthdate, 
                            new { htmlAttributes = new { @class = "form-control" } })

            @Html.ValidationMessageFor(model => model.Birthdate, "", 
                                                    new { @class = "text-danger" })
        </div>



        <div class="form-group">
            @Html.LabelFor(model => model.Weight, 
                                    htmlAttributes: new { @class = "control-label" })

            @Html.EditorFor(model => model.Weight, 
                            new { htmlAttributes = new { @class = "form-control" } })

            @Html.ValidationMessageFor(model => model.Weight, "", 
                                                    new { @class = "text-danger" })
        </div>



        <div class="form-group">
            @Html.LabelFor(model => model.HealthConcerns, 
                                htmlAttributes: new { @class = "control-label" })

            @Html.EditorFor(model => model.HealthConcerns, 
                        new { htmlAttributes = new { @class = "form-control" } })

            @Html.ValidationMessageFor(model => model.HealthConcerns, "", 
                                                    new { @class = "text-danger" })
        </div>



        <div class="form-group">
            @Html.LabelFor(model => model.BehaviorConcerns, 
                                    htmlAttributes: new { @class = "control-label" })

            @Html.EditorFor(model => model.BehaviorConcerns, 
                            new { htmlAttributes = new { @class = "form-control" } })

            @Html.ValidationMessageFor(model => model.BehaviorConcerns, "", 
                                                        new { @class = "text-danger" })
        </div>



        <div class="form-group">
            @Html.LabelFor(model => model.PetAccess, 
                                    htmlAttributes: new { @class = "control-label" })

            @Html.EditorFor(model => model.PetAccess, 
                            new { htmlAttributes = new { @class = "form-control" } })

            @Html.ValidationMessageFor(model => model.PetAccess, "", 
                                                        new { @class = "text-danger" })
        </div>



        <div class="form-group">
            @Html.LabelFor(model => model.EmergencyContactName, 
                                htmlAttributes: new { @class = "control-label" })

            @Html.EditorFor(model => model.EmergencyContactName, 
                                new { htmlAttributes = new { @class = "form-control" } })

            @Html.ValidationMessageFor(model => model.EmergencyContactName, "", 
                                            new { @class = "text-danger" })
        </div>



        <div class="form-group">
            @Html.LabelFor(model => model.EmergencyContactPhone, 
                                    htmlAttributes: new { @class = "control-label" })

            @Html.EditorFor(model => model.EmergencyContactPhone, 
                            new { htmlAttributes = new { @class = "form-control" } })

            @Html.ValidationMessageFor(model => model.EmergencyContactPhone, "", 
                                                        new { @class = "text-danger" })
        </div>



        <div class="form-group">
            @Html.LabelFor(model => model.NeedsDetails, 
                                    htmlAttributes: new { @class = "control-label" })

            @Html.EditorFor(model => model.NeedsDetails, 
                            new { htmlAttributes = new { @class = "form-control" } })

            @Html.ValidationMessageFor(model => model.NeedsDetails, "", 
                                                        new { @class = "text-danger" })
        </div>



        <div class="form-group">
            @Html.LabelFor(model => model.AccessInstructions, 
                                    htmlAttributes: new { @class = "control-label" })

            @Html.EditorFor(model => model.AccessInstructions, 
                            new { htmlAttributes = new { @class = "form-control" } })

            @Html.ValidationMessageFor(model => model.AccessInstructions, "", 
                                                        new { @class = "text-danger" })
        </div>



        <div class="form-group">
            @Html.LabelFor(model => model.PetOwnerID, "PetOwnerID", 
                                    htmlAttributes: new { @class = "control-label" })

            @Html.DropDownList("PetOwnerID", null, 
                                    htmlAttributes: new { @class = "form-control" })

            @Html.ValidationMessageFor(model => model.PetOwnerID, "", 
                                                    new { @class = "text-danger" })
        </div>
        *@

        <!--================================ BUTTONS! ================================-->
        <div class="row">
            <div class="col-sm-offset-10 col-sm-2">
                <div class="button_box">
                    <div class="form-group">
                        <div>
                            <input type="submit" value="Add Pet!" 
                                                 class="btn our_buttons" />
                        </div>
                    </div>

                    <div class="our_create-edit_buttons">
                        @Html.ActionLink("Cancel!", "Index",
                                                    new { controller = "ProfilePage" })
                    </div>
                </div><!-- end button_box div -->
            </div><!-- END COLUMN FOR BUTTON BOX ROW -->
        </div><!-- END 2nd ROW! -->
        <!------------------------------------------------------------------------------>
    </div><!-- END FORM DIV! -->
    }
    <!--==============================================================================-->
</div><!-- END CONTAINER-FLUID DIV! -->